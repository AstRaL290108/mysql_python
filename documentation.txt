!На данный момент поддерживаются форматы int, float, text, varchar, date, datetime!

+Инструкция по использованию:

1. Кидем файл в корень проэкта
2. Импортирует файл по названию:

	import mqsql_python


3. Создаём экземпляр класса DataBase:

	db = DataBase(
		user = "root", #Имя пользователя
		password = "root", #Пароль от базы данных
		database = "test", #Название базы данных
		host = "localhost", #Хост, где расположена база данных
	)


4. Добавляем данные в таблицу:
	
	#Создаём словарь, где ключ - название поля в таблице, а значение - это значение, которое применится к полю
	req = {
		'name': "Сергей",
		'age': 15,
		'date_of_birth': datetime.date(2008, 12, 10),
		'table': 'database' #Название таблицы
	}

	#Используем этот метод для применения
	db.insert_into(req)

5. Удаляем данные из таблицы:

	req = {
		'name': "Сергей", #Удалятся все строки, где полу "name" в значении "Cергей"
		'table': 'database' #Название таблицы
	}

	#Используем этот метод для применения
	db.delete(req)

6. Просматриваем данные:

	req = {
		'name': "Сергей", #Параметр для поиска
		'table': 'test', #Название таблицы
		'type': 'one' #Тип поиска: "one" - первая попавшаяся запись, "many" - все записи по значению, "all" - все записи из таблицы(параметр писка для этого типа не указывается)
	}

	#Вызвращает список с ответом
	resp = db.select(req)

7. Обновляем данные:
	
	req = {
		'colamns': { # Вложеный словарь с парами ключ-значение для изменения
			'name': "Кирилл",
			'age': -158
		},
		'where': {date_of_birth: datetime.date(2008, 12, 10)}, #Параметр поиска поля для изменения
		'table': 'test' # Название таблицы
	}

	db.update(req)